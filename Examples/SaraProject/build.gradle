group 'edu.cmu.inmind'
version '1.0'

apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
    maven {
        credentials {
            username 'inmind'
            password '2015InMindYahoo'
        }
        url "http://www.cs.cmu.edu/afs/cs/project/inmind-cmu-yahoo/www/maven2"
    }
    maven { url 'https://oss.jfrog.org/libs-snapshot' }
}

configurations {
    deployerJars
}

configurations.all {
    resolutionStrategy{
        // Check for updates every hour.
        // You can force it to an immediate update by passing 0 instead of 3600
        cacheChangingModulesFor 0, 'seconds'
        cacheDynamicVersionsFor 0, 'seconds'
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile ('edu.cmu.inmind.framework.multiuser:server:3.0-rc3:fat')
            {
                transitive = true
            }// this is the Multiuser Framework
    compile 'edu.cmu.inmind.framework:saracommons:1.0'      // this is the Sara Commons Catalog

    compile group: 'aopalliance', name: 'aopalliance', version: '1.0'
    compile group: 'uk.com.robust-it', name: 'cloning', version: '1.9.3'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.0'
    compile group: 'com.google.guava', name: 'guava', version: '21.0'
    compile group: 'com.google.inject', name: 'guice', version: '4.1.0'
    compile group: 'com.google.inject.extensions', name: 'guice-multibindings', version: '4.1.0'
    compile group: 'com.google.inject.extensions', name: 'guice-assistedinject', version: '4.1.0'
    compile group: 'javax.inject', name: 'javax.inject', version: '1'
    compile group: 'org.zeromq', name: 'jeromq', version: '0.3.5'
    compile group: 'org.objenesis', name: 'objenesis', version: '2.5.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.8.2'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.8.2'
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    classifier "sources"
}

task showMeCache {
    doLast{
        configurations.compile.each { println it }
    }
}

// you have to run: gradle clean build --refresh-dependencies

apply plugin: 'maven'
