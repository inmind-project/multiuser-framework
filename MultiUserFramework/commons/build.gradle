import java.util.concurrent.TimeUnit

group 'edu.cmu.inmind.multiuser.framework'
//version '2.0.1'
group 'edu.cmu.inmind.multiuser'
version "$project.muf_version"

apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
    maven { url 'https://oss.jfrog.org/libs-snapshot' }
}

configurations {
    deployerJars
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'

    //compile fileTree(dir: 'libs', include: ['*.jar'])
    deployerJars 'org.apache.maven.wagon:wagon-ssh:2.9'

    compile group: 'aopalliance', name: 'aopalliance', version: '1.0'
    compile group: 'uk.com.robust-it', name: 'cloning', version: '1.9.3'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.0'
    compile group: 'com.google.guava', name: 'guava', version: '22.0'
    compile group: 'com.google.inject', name: 'guice', version: '4.1.0'
    compile group: 'com.google.inject.extensions', name: 'guice-multibindings', version: '4.1.0'
    compile group: 'com.google.inject.extensions', name: 'guice-assistedinject', version: '4.1.0'
    compile group: 'javax.inject', name: 'javax.inject', version: '1'
    //compile group: 'zeromq', name: 'jeromq', version: '0.3.5'
    //compile group: 'zeromq', name: 'jeromq', version: '0.4.2'
    //compile group: 'zeromq', name: 'jeromq', version: '0.4.3-SNAPSHOT'
    compile group: 'org.objenesis', name: 'objenesis', version: '2.5.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.8.2'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.8.2'

    // libraries for jeromq
    compile group: 'org.zeromq', name: 'jnacl', version: '0.1.0'
}

task sourceJar(type: Jar) {
    classifier 'all'
    from sourceSets.main.allJava
    classifier "sources"
}
/*task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'commons',
                'Implementation-Version': version
        //'Main-Class': 'edu.cmu.inmind.multiuser.communication'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}*/

tasks.getByPath('build').dependsOn(shadowJar)


shadowJar {
    baseName = project.name
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'com.github.johnrengelman.shadow'

uploadArchives {
    repositories {
        mavenDeployer {
            configuration = configurations.deployerJars
            repository(url: "scp://linux.gp.cs.cmu.edu:/afs/cs/project/inmind-cmu-yahoo/www/maven2/") {
                //http://stackoverflow.com/questions/12749225/where-to-put-gradle-configuration-i-e-credentials-that-should-not-be-committe
                authentication(userName: mavenUser, password: mavenPassword)
            }
            //deploy locally
            //repository(url: "file:///Users/oscarr/.m2/repository/")

            pom.project {
                name 'MultiuserFramework'
                packaging 'jar'
                description 'Multiuser Framework. rc = Release Candidate, probably feature complete and should be ' +
                        'pretty stable - problems should be relatively rare and minor, but worth reporting to try to ' +
                        'get them fixed for release.'
                pom.version = "$project.muf_version"
                pom.artifactId = 'commons'
                pom.groupId = "edu.cmu.inmind.framework.multiuser"

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        name 'Oscar Romero'
                        email 'oscarr@andrew.cmu.edu'
                    }
                }
            }
        }
    }
}
uploadShadow {
    repositories {
        mavenDeployer {
            configuration = configurations.deployerJars
            repository(url: "scp://linux.gp.cs.cmu.edu:/afs/cs/project/inmind-cmu-yahoo/www/maven2/") {
                //http://stackoverflow.com/questions/12749225/where-to-put-gradle-configuration-i-e-credentials-that-should-not-be-committe
                authentication(userName: mavenUser, password: mavenPassword)
            }
            //deploy locally
            //repository(url: "file:///Users/oscarr/.m2/repository/")

            pom.project {
                name 'MultiuserFramework'
                packaging 'jar'
                description 'Multiuser Framework. rc = Release Candidate, probably feature complete and should be ' +
                        'pretty stable - problems should be relatively rare and minor, but worth reporting to try to ' +
                        'get them fixed for release.'
                pom.version = "$project.muf_version"
                pom.artifactId = 'commons'
                pom.groupId = "edu.cmu.inmind.framework.multiuser"

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        name 'Oscar Romero'
                        email 'oscarr@andrew.cmu.edu'
                    }
                }
            }
        }
    }
}

configurations.all {
    // Check for updates every hour.
    // You can force it to an immediate update by passing 0 instead of 3600
    resolutionStrategy.cacheChangingModulesFor(0, TimeUnit.MINUTES)
    resolutionStrategy.cacheDynamicVersionsFor(0, TimeUnit.MINUTES)
}